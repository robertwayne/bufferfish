class D{inner;position;reading;capacity;textDecoder;textEncoder;constructor(j=new ArrayBuffer(0)){this.inner=new Uint8Array(j),this.position=0,this.reading=!1,this.capacity=1024,this.textDecoder=void 0,this.textEncoder=void 0}write(j){if(this.capacity>0&&(j.length>this.capacity||this.inner.length+j.length>this.capacity))return new Error(`Bufferfish capacity exceeded (${this.capacity} bytes)`);this.reading=!1;const q=new Uint8Array(this.inner.length+j.length);q.set(this.inner,0),q.set(j,this.inner.length),this.inner=q;const x=j.length;return this.position+=x,x}view=()=>{return this.inner.slice()};startReading(){if(this.reading)return;this.position=0,this.reading=!0}setMaxCapacity(j){this.capacity=j}peek=()=>{this.startReading();const j=this.inner.slice(this.position,this.position+1)[0];if(this.position>=this.inner.length||j===void 0)return new Error(`peek of 1 byte exceeds the max capacity of ${this.capacity} bytes on this Bufferfish`);return j};peekN=(j)=>{this.startReading();const q=this.inner.slice(this.position,this.position+j);if(this.position+j>this.inner.length)return new Error(`peek of ${j} bytes exceeds the max capacity of ${this.capacity} bytes on this Bufferfish`);return q};push=(j)=>{if(j instanceof D){const q=this.write(j.view());if(q instanceof Error)return q}else if(j instanceof Uint8Array){const q=this.write(j);if(q instanceof Error)return q}else if(j instanceof ArrayBuffer){const q=this.write(new Uint8Array(j));if(q instanceof Error)return q}else if(j instanceof Array){const q=this.write(new Uint8Array(j));if(q instanceof Error)return q}else return new Error("invalid type")};writeUint8=(j)=>{if(j>255||j<0)return new Error(`value ${j} must be between 0 and 255`);const q=new Uint8Array(1);new DataView(q.buffer).setUint8(0,j);const w=this.write(q);if(w instanceof Error)return w};writeUint16=(j)=>{if(j>65535||j<0)return new Error(`value ${j} must be between 0 and 65535`);const q=new Uint8Array(2);new DataView(q.buffer).setUint16(0,j);const w=this.write(q);if(w instanceof Error)return w};writeUint32=(j)=>{if(j>4294967295||j<0)return new Error(`value ${j} must be between 0 and 4294967295`);const q=new Uint8Array(4);new DataView(q.buffer).setUint32(0,j);const w=this.write(q);if(w instanceof Error)return w};writeInt8=(j)=>{if(j>127||j<-128)return new Error(`value ${j} must be between -128 and 127`);const q=new Uint8Array(1);new DataView(q.buffer).setInt8(0,j);const w=this.write(q);if(w instanceof Error)return w};writeInt16=(j)=>{if(j>32767||j<-32768)return new Error(`value ${j} must be between -32768 and 32767`);const q=new Uint8Array(2);new DataView(q.buffer).setInt16(0,j);const w=this.write(q);if(w instanceof Error)return w};writeInt32=(j)=>{if(j>2147483647||j<-2147483648)return new Error(`value ${j} must be between -2147483648 and 2147483647`);const q=new Uint8Array(4);new DataView(q.buffer).setInt32(0,j);const w=this.write(q);if(w instanceof Error)return w};writeBool=(j)=>{const q=this.writeUint8(j?1:0);if(q instanceof Error)return q};writePackedBools=(j)=>{if(j.length>8)return new Error("cannot pack more than 8 bools into a single byte");let q=0;for(let w of j)if(q<<=1,w)q|=1;q<<=8-j.length;const x=this.writeUint8(q);if(x instanceof Error)return x};writeString=(j)=>{if(!this.textEncoder)this.textEncoder=new TextEncoder;const q=this.textEncoder.encode(j),x=this.writeUint16(q.length);if(x instanceof Error)return x;const w=this.write(q);if(w instanceof Error)return w};writeRawBytes=(j)=>{const q=this.write(j);if(q instanceof Error)return q};readUint8(){if(this.startReading(),this.position+1>this.inner.length)return new Error("attempted to read past the end of the Bufferfish");const j=new DataView(this.inner.buffer,this.position,1).getUint8(0);return this.position+=1,j}readUint16(){if(this.startReading(),this.position+2>this.inner.length)return new Error("attempted to read past the end of the Bufferfish");const j=new DataView(this.inner.buffer,this.position,2).getUint16(0);return this.position+=2,j}readUint32(){if(this.startReading(),this.position+4>this.inner.length)return new Error("attempted to read past the end of the Bufferfish");const j=new DataView(this.inner.buffer,this.position,4).getUint32(0);return this.position+=4,j}readInt8(){if(this.startReading(),this.position+1>this.inner.length)return new Error("attempted to read past the end of the Bufferfish");const j=new DataView(this.inner.buffer,this.position,1).getInt8(0);return this.position+=1,j}readInt16(){if(this.startReading(),this.position+2>this.inner.length)return new Error("attempted to read past the end of the Bufferfish");const j=new DataView(this.inner.buffer,this.position,2).getInt16(0);return this.position+=2,j}readInt32(){if(this.startReading(),this.position+4>this.inner.length)return new Error("attempted to read past the end of the Bufferfish");const j=new DataView(this.inner.buffer,this.position,4).getInt32(0);return this.position+=4,j}readBool(){const j=this.readUint8();if(j instanceof Error)return j;return j===1}readPackedBools(j=8){if(j>8)return new Error("cannot read more than 8 bools from a single byte");const q=this.readUint8();if(q instanceof Error)return q;const x=q,w=[];for(let z=0;z<j;z++)w.push((x&1<<7-z)!==0);return w}readString(){const j=this.readUint16();if(j instanceof Error)return j;const q=j;if(this.position+q>this.inner.length)return new Error("attempted to read past the end of the Bufferfish");if(!this.textDecoder)this.textDecoder=new TextDecoder("utf-8");const x=this.textDecoder.decode(this.inner.subarray(this.position,this.position+q));return this.position+=q,x}readArray(j){const q=this.readUint16();if(q instanceof Error)return q;const x=q,w=[];for(let z=0;z<x;z++){const C=j();if(C instanceof Error)return C;w.push(C)}return w}}export{D as Bufferfish};

//# debugId=9FB7B87D8C49296A64756e2164756e21
