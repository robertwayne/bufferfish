class h{inner;pos;reading;capacity;constructor(o=new ArrayBuffer(0)){this.inner=new Uint8Array(o),this.pos=0,this.reading=!1,this.capacity=1024}write(o){if(this.capacity>0&&(o.length>this.capacity||this.inner.length+o.length>this.capacity))throw new Error("Bufferfish is full");this.reading=!1;const n=new Uint8Array(this.inner.length+o.length);n.set(this.inner,0),n.set(o,this.inner.length),this.inner=n;const w=o.length;return this.pos+=w,w}view=()=>{return this.inner.slice()};startReading(){if(this.reading)return;this.pos=0,this.reading=!0}setMaxCapacity(o){this.capacity=o}peek=()=>{if(this.startReading(),this.pos>=this.inner.length)return null;return this.inner.slice(this.pos,this.pos+1)[0]??null};peekN=(o)=>{if(this.startReading(),this.pos+o>this.inner.length)return null;return this.inner.slice(this.pos,this.pos+o)};push=(o)=>{if(o instanceof h)this.write(o.view());else if(o instanceof Uint8Array)this.write(o);else if(o instanceof ArrayBuffer)this.write(new Uint8Array(o));else if(o instanceof Array)this.write(new Uint8Array(o));else throw new Error("Invalid type")};writeUint8=(o)=>{if(o>255||o<0)throw new Error("Value is out of range");const n=new Uint8Array(1);new DataView(n.buffer).setUint8(0,o),this.write(n)};writeUint16=(o)=>{if(o>65535||o<0)throw new Error("Value is out of range");const n=new Uint8Array(2);new DataView(n.buffer).setUint16(0,o),this.write(n)};writeUint32=(o)=>{if(o>4294967295||o<0)throw new Error("Value is out of range");const n=new Uint8Array(4);new DataView(n.buffer).setUint32(0,o),this.write(n)};writeInt8=(o)=>{if(o>127||o<-128)throw new Error("Value is out of range");const n=new Uint8Array(1);new DataView(n.buffer).setInt8(0,o),this.write(n)};writeInt16=(o)=>{if(o>32767||o<-32768)throw new Error("Value is out of range");const n=new Uint8Array(2);new DataView(n.buffer).setInt16(0,o),this.write(n)};writeInt32=(o)=>{if(o>2147483647||o<-2147483648)throw new Error("Value is out of range");const n=new Uint8Array(4);new DataView(n.buffer).setInt32(0,o),this.write(n)};writeBool=(o)=>{this.writeUint8(o?1:0)};writePackedBools=(o)=>{if(o.length>4)throw new Error("Each packed bool can only represent 4 or fewer values");let n=0;for(let w of o)if(n<<=1,w)n|=1;this.writeUint8(n)};writeString=(o)=>{const n=(new TextEncoder()).encode(o);this.writeUint16(n.length),this.write(n)};writeSizedString=(o)=>{const n=(new TextEncoder()).encode(o);this.write(n)};writeRawBytes=(o)=>{this.write(o)};readUint8=()=>{this.startReading();const o=new Uint8Array(1);return o.set(this.inner.subarray(this.pos,this.pos+1)),this.pos+=1,new DataView(o.buffer).getUint8(0)};readUint16=()=>{this.startReading();const o=new Uint8Array(2);return o.set(this.inner.subarray(this.pos,this.pos+2)),this.pos+=2,new DataView(o.buffer).getUint16(0)};readUint32=()=>{this.startReading();const o=new Uint8Array(4);return o.set(this.inner.subarray(this.pos,this.pos+4)),this.pos+=4,new DataView(o.buffer).getUint32(0)};readInt8=()=>{this.startReading();const o=new Uint8Array(1);return o.set(this.inner.subarray(this.pos,this.pos+1)),this.pos+=1,new DataView(o.buffer).getInt8(0)};readInt16=()=>{this.startReading();const o=new Uint8Array(2);return o.set(this.inner.subarray(this.pos,this.pos+2)),this.pos+=2,new DataView(o.buffer).getInt16(0)};readInt32=()=>{this.startReading();const o=new Uint8Array(4);return o.set(this.inner.subarray(this.pos,this.pos+4)),this.pos+=4,new DataView(o.buffer).getInt32(0)};readBool=()=>{this.startReading();const o=new Uint8Array(1);return o.set(this.inner.subarray(this.pos,this.pos+1)),this.pos+=1,o[0]===1};readPackedBools=()=>{return[]};readString=()=>{this.startReading();const o=this.readUint16(),n=this.inner.subarray(this.pos,this.pos+o),w=new TextDecoder("utf-8").decode(n);return this.pos+=o,w};readSizedString=(o)=>{this.startReading();const n=this.inner.subarray(this.pos,this.pos+o),w=new TextDecoder("utf-8").decode(n);return this.pos+=o,w};readStringRemaining=()=>{this.startReading();const o=this.inner.subarray(this.pos,this.inner.length),n=new TextDecoder("utf-8").decode(o);return this.pos=this.inner.length,n}}export{h as Bufferfish};

//# debugId=2E72D6B618B94C1264756e2164756e21
